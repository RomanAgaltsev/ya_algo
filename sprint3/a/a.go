/*
A. Генератор скобок

Рита по поручению Тимофея наводит порядок в правильных скобочных последовательностях (ПСП), состоящих только из круглых скобок ().
Для этого ей надо сгенерировать все ПСП длины 2n в алфавитном порядке — алфавит состоит из ( и ) и открывающая скобка идёт раньше закрывающей.
Помогите Рите —– напишите программу, которая по заданному n выведет все ПСП в нужном порядке.

Рассмотрим второй пример. Надо вывести ПСП из четырёх символов. Таких всего две:
(())
()()
(()) идёт раньше ()(), так как первый символ у них одинаковый, а на второй позиции у первой ПСП стоит (, который идёт раньше ).

Формат ввода
На вход функция принимает n — целое число от 0 до 10.

Формат вывода
Функция должна напечатать все возможные скобочные последовательности заданной длины в алфавитном (лексикографическом) порядке.

Пример 1
Ввод
3
Вывод
((()))
(()())
(())()
()(())
()()()

Пример 2
Ввод
2
Вывод
(())
()()
*/

package main

import (
	"fmt"
	"strconv"
)

func getParSeq(n int, left int, right int, result string) {
	if left+right == 2*n {
		fmt.Println(result)
		return
	}
	if left < n {
		getParSeq(n, left+1, right, result+"(")
	}
	if left > right {
		getParSeq(n, left, right+1, result+")")
	}
}

func main() {
	getParSeq(readInt(), 0, 0, "")
}

func readInt() int {
	var aString string
	fmt.Scan(&aString)
	a, _ := strconv.Atoi(aString)
	return a
}
